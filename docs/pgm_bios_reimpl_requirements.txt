PGM BIOS 再实现需求规格
========================

目标
----
- 实现一份可替换原版 PGM_BIOS PROM 的固件镜像，保证在 PGMBL 主板与 MAME pgmonly 构建中均能通过自检并驱动系统菜单、RTC、输入输出、字库绘制等全部基础功能。
- 保留与原 BIOS 相同的内存布局、状态表、断言信息，为已有游戏及调试工具提供兼容接口。
- 新固件需支持现有服务菜单、统计项目、字符串渲染、Z80 通讯和 ICS2115 声音下载流程，为将来扩展自制程序留出钩子。

范围
----
- 启动矢量与复位流程（向量表 0x0000~0x003F）。
- 任务调度与定时器槽（0x801550 结构族）。
- 事件队列 / 环形缓冲 API（`sub_1310`、`sub_1730` 等）。
- 服务与统计 UI 的状态机、输入处理、文本绘制、分页逻辑。
- RTC/I²C 总线访问、CMOS 读写、机器标识存取。
- M68K ↔ Z80 共享内存、命令通道、波形/乐谱镜像下载。
- 断言与诊断显示、致命错误处理路径。

非目标（短期）
--------------
- 不复刻内置字体/图形数据（可直接引用 ROM 原始字库与图块资源）。
- 不新增除调试日志外的额外用户界面。
- 不改写 MAME 里对 BIOS 的装载流程；先保证二进制兼容。

约束条件
--------
- 68K 指令集，需遵守原 BIOS 使用的小端字节序资源格式与内存对齐方式。
- PROM 容量受限（1Mbit），所有常量/表格必须与原版大小相当或更小。
- 系统在 VBlank 中断与定时器回调时对时间敏感，需维持原有函数调用窗口。
- ROM 中存在大量断言字符串，移植时应保留以复用现有诊断逻辑。
- 部分 BIOS 调用由游戏程序直接跳转（裸地址调用），禁止调整函数入口地址；如需替换，需通过跳板保留旧地址。

关键依赖
--------
- IDA Pro + MCP 提供的反汇编、符号、字符串引用数据。
- docs 目录内的逐函数分析报告、断言索引、文本渲染研究。
- `ida_mcp_client.py` 未来的自动化查询（字符串交叉引用、批量反汇编）
- MAME pgmonly 构建（禁 CRC、限定 PGM/PGM2），用于验证新 ROM。

交付物
------
1. 分层结构设计文档（初始化、调度、UI、音频传输、断言等模块）。
2. 汇编或 C -> 汇编 代码草案，覆盖全部 BIOS API。
3. 单元测试/仿真方案：在 MAME 中对服务菜单、RTC、Z80 通讯、断言流程进行回归。
4. 替代 ROM 镜像（含断言、常量表），提供生成脚本。

后续行动
--------
- 对照《PGM BIOS Function Analysis Progress》逐项校验依赖，标注再实现优先级。
- 建立模块级任务分解（10 小时计划），每完成一项生成专属文档并更新进度表。
- 识别需要保留的关键常量表（向量表、字符集、VRAM 格式）并开始提取。
