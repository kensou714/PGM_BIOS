PGM BIOS 硬件接口总览
====================

内存映射分区
------------
| 区域 | 地址范围 | 权限 | 说明 | 主要关联函数 |
| ---- | -------- | ---- | ---- | ------------ |
| PGM_BIOS | 0x000000-0x0FFFFF | RX | BIOS 代码与常量表。 | 全部 ROM 函数；自制固件需保持入口地址兼容。 |
| PGM_BANKROM | 0x100000-0x3FFFFF | R | 扩展程序/字体等只读资源。 | `sub_6E72` 字符集、服务菜单模板。 |
| PGM_WATCHDOG | 0x700000-0x70000F | RW | 看门狗寄存器窗口。 | 尚未完全逆向；预期定时喂狗。 |
| PGM_SRAM | 0x800000-0x81FFFF | RW | 系统工作 RAM。 | 事件队列 (`0x803730`)、命令标志 (`0x80374E`)、统计缓冲 (`sub_4076`)。 |
| PGM_VRAM | 0x900000-0x907FFF | RW | 图形平面。 | 文本渲染/分页 (`sub_6E72`, `sub_7222`)。 |
| PGM_PALETTE | 0xA00000-0xA011FF | RW | 调色板 RAM。 | `sub_6C9A` 预置 UI 颜色、渐变控制 (`sub_2008`, `sub_3054`)。 |
| PGM_VREG | 0xB00000-0xB0FFFF | RW | 显示寄存器/滚屏控制。 | `sub_2008`, `sub_2208` 等更新寄存器。 |
| PGM_SOUNDPORT | 0xC00000-0xC0000F | RW | M68K ↔ Z80 通讯、RTC 访问。 | 详见下一节。 |
| PGM_INPUTS | 0xC08000-0xC08007 | RW | 手柄、服务、DIP 输入。 | `sub_7516`, `sub_7222` 读取输入；位定义见 `pgm_inputs_bits` 枚举。 |
| PGM_Z80SHARE | 0xC10000-0xC1FFFF | RW | 与 Z80 共享的下载缓冲。 | `sub_CE04`, `sub_CEA4`, `sub_CFC8` 下载校验；音乐/音效传输。 |

关键 I/O 寄存器
--------------
| 地址 | IDA 标签 | BIOS 用途 | 典型调用 |
| ---- | -------- | -------- | -------- |
| 0x700006 | `pgm_watchdog_w` | 写入保持看门狗；断电/挂起前需停止。 | 尚未定位具体函数，推测来自主循环。 |
| 0xC00003 | `pgm_m68k_to_z80` | 主 CPU → 声音命令（触发 Z80 NMI）。写入 16 位，低字节有效。 | `sub_B666`/`sub_B6C6` 在发送 RTC 命令或波形索引时使用。 |
| 0xC00005 | `pgm_m68k_to_z80_b` | 第二声控寄存器，常配合 `sub_B55E`/`sub_B586` 以逐比特发送数据。 | RTC 读写 (`sub_B55E`, `sub_B586`)、保护通信。 |
| 0xC00007 | `pgm_rtc` | V3021 RTC/保护芯片串行输出。 | `sub_B5BC` 逐位取样后转为字节。 |
| 0xC00008 | `pgm_z80_reset` | 向 Z80/ICS2115 发送启动/复位序列；常写 0x5050。 | 启动校验 (`sub_CE04`)、下载封装 (`sub_CEA4`, `sub_CFC8`)。 |
| 0xC0000A | `pgm_z80_ctrl` | 声音控制/波形下载握手口。写 0x45D3 表示“写入中”，写 0x0A0A 表示“完成”。 | `sub_CEA4`, `sub_CEFE`, `sub_CFC8`。 |
| 0xC0000D | `pgm_z80_to_m68k` | 声音 CPU → 主 CPU 回读 latch。 | `sub_1730`, `sub_17F6` 查询音频/服务事件时读取。 |
| 0xC08000 | `pgm_inputs_p1p2` | 玩家 1/2 按键状态。 | UI 控制器 `sub_6F6A`, `sub_7222`。 |
| 0xC08002 | `pgm_inputs_p3p4` | 玩家 3/4 按键。 | 多人菜单/扩展模式。 |
| 0xC08004 | `pgm_inputs_service` | 服务、测试、投币键。 | 服务菜单框架 `sub_6C9A`, `sub_7222`。 |
| 0xC08006 | `pgm_inputs_dsw` | DIP 拨码、投币计数写入。 | `sub_408` 系列读取设置；`sub_5986` 更新统计。 |

工作 RAM 结构
------------
| 地址 | 结构/用途 | 相关函数 |
| ---- | --------- | -------- |
| 0x801550 | 定时器槽 (4 × 32bit)，空闲值 0xFFFFFFFF。 | `sub_F40` 分配、`sub_F8A` 释放、`sub_1012` 读取、`sub_104E` 写入。 |
| 0x801560 | 活动定时器计数 (uint8)。 | 在 `sub_F40`/`sub_F8A` 中自增自减，配合资源耗尽告警。 |
| 0x801580.. | 定时器任务描述（在 `sub_1188` 中填充）。 | 负责存储回调地址、延迟。 |
| 0x803730 | 服务命令 FIFO 基址。 | `sub_D58E`、`sub_1310`、`sub_D3B2`。 |
| 0x80374C | 帧计数 / 动画步进（0..63 循环）。 | `sub_D58E` 递增并嵌入命令。 |
| 0x80374E | “有命令待处理”标志。 | `sub_D394` 置位；应在命令消费后清零。 |
| 0x803766/0x803768 | 最近一次 Z80 下载字节数/块长。 | `sub_CFC8`、`sub_D102` 系列。 |
| 0x802058 | 渐变/淡入淡出状态表（4×16 bytes）。 | `sub_2C6C`, `sub_3054`, `sub_2008`。 |
| 0x8021CE | 排名榜缓存。 | `sub_5986` 旋转数据、`sub_4076` 清零。 |
| 0x803382 | 排名指标/指针表 (16-byte entries)。 | `sub_63E2` 更新映射。 |

定时器与同步机制
----------------
- **定时器池**：四个槽位，作为 BIOS 内部工作队列（一般用于 UI 闪烁、RTC 读取周期）。`sub_1188` 会打包回调和延迟 tick 并放入槽中。
- **服务命令 FIFO**：`sub_D58E` 将 UI 渲染命令压入 `0x803730`，随后 `sub_6E72` 等渲染例程消费。
- **Z80 下载握手**：所有向共享 RAM 写入的函数都会执行以下步骤：
  1. 写 `0x45D3` 至 `0xC0000A` 表示“开始发送”。
  2. 可选小延时（循环 5 次）。
  3. 通过 `sub_DC8` 等拷贝函数写数据到 `0xC10000` 基址。
  4. 写 `0x0A0A` 至 `0xC0000A` 通知完成，并调用 `sub_D394` 设置待处理标志。
  5. `sub_CF58` 驱动的比对流程会读取 `0xC10052` 与 `0x803768` 的记录，用来确认写入长度。
- **RTC/保护通信**：通过 `sub_B55E`/`sub_B586` 将命令位写入 `0xC00005`，`sub_B5BC` 从 `0xC00007` 取回串行位流，`sub_B512`/`sub_B536` 再将 BCD 与十进制互转。

复现建议
--------
- 保持上述地址与寄存器协议不变；自制 BIOS 需严格遵守握手写入顺序（尤其是 `0xC0000A` 的 0x45D3/0x0A0A 序列）。
- 初版固件可复用 ROM 中的查找表（如 0xE232 位掩码、0xEA54 校验表），后续再考虑替换。
- 任何新模块在写入 `0x80374E` 前，必须确保消费侧会清零，否则服务菜单将一直认为有命令待处理。
- 定时器槽数量有限，建议在替代实现中提供断言或日志，以便调试资源耗尽问题。
